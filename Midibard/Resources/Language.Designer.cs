//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MidiBard.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Language {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MidiBard.Resources.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin ensemble ready check.
        /// </summary>
        internal static string ensemble_begin_ensemble_ready_check {
            get {
                return ResourceManager.GetString("ensemble begin ensemble ready check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assign track to a character. Right click to reset assigned character.
        /// </summary>
        internal static string ensemble_combo_tooltip_assign_track_character {
            get {
                return ResourceManager.GetString("ensemble combo tooltip assign track character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw ensemble timeline on visualizer.
        /// </summary>
        internal static string ensemble_config_Draw_ensemble_progress_indicator_on_visualizer {
            get {
                return ResourceManager.GetString("ensemble config Draw ensemble progress indicator on visualizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensemble indicator delay.
        /// </summary>
        internal static string ensemble_config_Ensemble_indicator_delay {
            get {
                return ResourceManager.GetString("ensemble config Ensemble indicator delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update instrument when begin ensemble.
        /// </summary>
        internal static string ensemble_config_Update_instrument_when_begin_ensemble {
            get {
                return ResourceManager.GetString("ensemble config Update instrument when begin ensemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete and reset current file config.
        /// </summary>
        internal static string ensemble_Delete_and_reset_current_file_config {
            get {
                return ResourceManager.GetString("ensemble Delete and reset current file config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize other clients, right click to restore them..
        /// </summary>
        internal static string ensemble_Minimize_other_clients {
            get {
                return ResourceManager.GetString("ensemble Minimize other clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mute other clients.
        /// </summary>
        internal static string ensemble_mute_other_clients {
            get {
                return ResourceManager.GetString("ensemble mute other clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open current midi config file directory.
        /// </summary>
        internal static string ensemble_open_midi_config_directory {
            get {
                return ResourceManager.GetString("ensemble open midi config directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open current midi config file.
        /// </summary>
        internal static string ensemble_open_midi_config_file {
            get {
                return ResourceManager.GetString("ensemble open midi config file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save default performers.
        /// </summary>
        internal static string ensemble_Save_default_performers {
            get {
                return ResourceManager.GetString("ensemble Save default performers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a song from playlist.
        /// </summary>
        internal static string ensemble_Select_a_song_from_playlist {
            get {
                return ResourceManager.GetString("ensemble Select a song from playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop ensemble.
        /// </summary>
        internal static string ensemble_stop_ensemble {
            get {
                return ResourceManager.GetString("ensemble stop ensemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unmute other clients.
        /// </summary>
        internal static string ensemble_unmute_other_clients {
            get {
                return ResourceManager.GetString("ensemble unmute other clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Instruments, right click to pull back instrument.
        /// </summary>
        internal static string ensemble_update_instruments {
            get {
                return ResourceManager.GetString("ensemble update instruments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter to search.
        /// </summary>
        internal static string hint_search_textbox {
            get {
                return ResourceManager.GetString("hint search textbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Playlist.
        /// </summary>
        internal static string icon_button_tooltip_clear_playlist {
            get {
                return ResourceManager.GetString("icon button tooltip clear playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double click to clear playlist.
        /// </summary>
        internal static string icon_button_tooltip_clearplaylist_tootltip {
            get {
                return ResourceManager.GetString("icon button tooltip clearplaylist tootltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensemble panel.
        /// </summary>
        internal static string icon_button_tooltip_ensemble_panel {
            get {
                return ResourceManager.GetString("icon button tooltip ensemble panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string icon_button_tooltip_help {
            get {
                return ResourceManager.GetString("icon button tooltip help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import midi file
        ///Right click to select file dialog type.
        /// </summary>
        internal static string icon_button_tooltip_import_file {
            get {
                return ResourceManager.GetString("icon button tooltip import file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import folder
        ///Imports all midi files in selected folder and it&apos;s all subfolders.
        ///This may take a while when you select a folder that contains multiple layers of subfolders..
        /// </summary>
        internal static string icon_button_tooltip_import_folder {
            get {
                return ResourceManager.GetString("icon button tooltip import folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mini player.
        /// </summary>
        internal static string icon_button_tooltip_mini_player {
            get {
                return ResourceManager.GetString("icon button tooltip mini player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Music control panel.
        /// </summary>
        internal static string icon_button_tooltip_music_control_panel {
            get {
                return ResourceManager.GetString("icon button tooltip music control panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show playlist menu.
        /// </summary>
        internal static string icon_button_tooltip_playlist_menu {
            get {
                return ResourceManager.GetString("icon button tooltip playlist menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search playlist.
        /// </summary>
        internal static string icon_button_tooltip_search_playlist {
            get {
                return ResourceManager.GetString("icon button tooltip search playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings panel.
        /// </summary>
        internal static string icon_button_tooltip_settings_panel {
            get {
                return ResourceManager.GetString("icon button tooltip settings panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync all Midibard settings on this pc.
        /// </summary>
        internal static string icon_button_tooltip_sync_settings {
            get {
                return ResourceManager.GetString("icon button tooltip sync settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracks visualization window
        ///Right click to reset visualizer window position.
        /// </summary>
        internal static string icon_button_tooltip_visualization {
            get {
                return ResourceManager.GetString("icon button tooltip visualization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following current playback progress.
        /// </summary>
        internal static string icon_button_tooltip_visualizer_follow_playback_tooltip {
            get {
                return ResourceManager.GetString("icon button tooltip visualizer follow playback tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ImGui file dialog.
        /// </summary>
        internal static string imgui_file_dialog {
            get {
                return ResourceManager.GetString("imgui file dialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chinese Simplified.
        /// </summary>
        internal static string language_chs {
            get {
                return ResourceManager.GetString("language chs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chinese Traditional.
        /// </summary>
        internal static string language_cht {
            get {
                return ResourceManager.GetString("language cht", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English.
        /// </summary>
        internal static string language_english {
            get {
                return ResourceManager.GetString("language english", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to German.
        /// </summary>
        internal static string language_german {
            get {
                return ResourceManager.GetString("language german", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Japanese.
        /// </summary>
        internal static string language_japanese {
            get {
                return ResourceManager.GetString("language japanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        internal static string menu_item_load_playlist {
            get {
                return ResourceManager.GetString("menu item load playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in file explorer.
        /// </summary>
        internal static string menu_item_open_in_file_explorer {
            get {
                return ResourceManager.GetString("menu item open in file explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in text editor.
        /// </summary>
        internal static string menu_item_open_in_text_editor {
            get {
                return ResourceManager.GetString("menu item open in text editor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from recent list.
        /// </summary>
        internal static string menu_item_remove_from_recent_list {
            get {
                return ResourceManager.GetString("menu item remove from recent list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save current playlist as....
        /// </summary>
        internal static string menu_label_clone_current_playlist {
            get {
                return ResourceManager.GetString("menu label clone current playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new playlist.
        /// </summary>
        internal static string menu_label_new_playlist {
            get {
                return ResourceManager.GetString("menu label new playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open playlist.
        /// </summary>
        internal static string menu_label_open_playlist {
            get {
                return ResourceManager.GetString("menu label open playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save playlist.
        /// </summary>
        internal static string menu_label_save_playlist {
            get {
                return ResourceManager.GetString("menu label save playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save playlist search results as....
        /// </summary>
        internal static string menu_label_save_search_as_playlist {
            get {
                return ResourceManager.GetString("menu label save search as playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync playlist between clients.
        /// </summary>
        internal static string menu_label_sync_playlist {
            get {
                return ResourceManager.GetString("menu label sync playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent playlists.
        /// </summary>
        internal static string menu_text_recent_playlist {
            get {
                return ResourceManager.GetString("menu text recent playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not available now.
        ///Please check log for further error information..
        /// </summary>
        internal static string notice_midi_device_error {
            get {
                return ResourceManager.GetString("notice midi device error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop event listening on .
        /// </summary>
        internal static string notice_midi_device_stop_listening {
            get {
                return ResourceManager.GetString("notice midi device stop listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List ordered.
        /// </summary>
        internal static string play_mode_list_ordered {
            get {
                return ResourceManager.GetString("play mode list ordered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List repeat.
        /// </summary>
        internal static string play_mode_list_repeat {
            get {
                return ResourceManager.GetString("play mode list repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random.
        /// </summary>
        internal static string play_mode_random {
            get {
                return ResourceManager.GetString("play mode random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single.
        /// </summary>
        internal static string play_mode_single {
            get {
                return ResourceManager.GetString("play mode single", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single repeat.
        /// </summary>
        internal static string play_mode_single_repeat {
            get {
                return ResourceManager.GetString("play mode single repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensemble settings.
        /// </summary>
        internal static string setting_group_label_ensemble_settings {
            get {
                return ResourceManager.GetString("setting group label ensemble settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General settings.
        /// </summary>
        internal static string setting_group_label_general_settings {
            get {
                return ResourceManager.GetString("setting group label general settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance settings.
        /// </summary>
        internal static string setting_group_label_performance_settings {
            get {
                return ResourceManager.GetString("setting group label performance settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto adapt notes.
        /// </summary>
        internal static string setting_label_auto_adapt_notes {
            get {
                return ResourceManager.GetString("setting label auto adapt notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto open MidiBard.
        /// </summary>
        internal static string setting_label_auto_open_MidiBard {
            get {
                return ResourceManager.GetString("setting label auto open MidiBard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto restart listening.
        /// </summary>
        internal static string setting_label_auto_restart_listening {
            get {
                return ResourceManager.GetString("setting label auto restart listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto set background frame limit.
        /// </summary>
        internal static string setting_label_auto_set_background_frame_limit {
            get {
                return ResourceManager.GetString("setting label auto set background frame limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto switch instrument(midi track name).
        /// </summary>
        internal static string setting_label_auto_switch_instrument_bmp {
            get {
                return ResourceManager.GetString("setting label auto switch instrument bmp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto switch instrument(file name).
        /// </summary>
        internal static string setting_label_auto_switch_instrument_by_file_name {
            get {
                return ResourceManager.GetString("setting label auto switch instrument by file name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto transpose(file name).
        /// </summary>
        internal static string setting_label_auto_transpose_by_file_name {
            get {
                return ResourceManager.GetString("setting label auto transpose by file name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low latency mode.
        /// </summary>
        internal static string setting_label_low_latency_mode {
            get {
                return ResourceManager.GetString("setting label low latency mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIDI Input.
        /// </summary>
        internal static string setting_label_midi_input_device {
            get {
                return ResourceManager.GetString("setting label midi input device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor ensemble.
        /// </summary>
        internal static string setting_label_monitor_ensemble {
            get {
                return ResourceManager.GetString("setting label monitor ensemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instrument.
        /// </summary>
        internal static string setting_label_select_instrument {
            get {
                return ResourceManager.GetString("setting label select instrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string setting_label_select_ui_language {
            get {
                return ResourceManager.GetString("setting label select ui language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play speed.
        /// </summary>
        internal static string setting_label_set_play_speed {
            get {
                return ResourceManager.GetString("setting label set play speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress.
        /// </summary>
        internal static string setting_label_set_progress {
            get {
                return ResourceManager.GetString("setting label set progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay.
        /// </summary>
        internal static string setting_label_song_delay {
            get {
                return ResourceManager.GetString("setting label song delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standalone playlist window.
        /// </summary>
        internal static string setting_label_standalone_playlist_window {
            get {
                return ResourceManager.GetString("setting label standalone playlist window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable local clients sync.
        /// </summary>
        internal static string setting_label_sync_clients {
            get {
                return ResourceManager.GetString("setting label sync clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI color.
        /// </summary>
        internal static string setting_label_theme_color {
            get {
                return ResourceManager.GetString("setting label theme color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tone mode.
        /// </summary>
        internal static string setting_label_tone_mode {
            get {
                return ResourceManager.GetString("setting label tone mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose.
        /// </summary>
        internal static string setting_label_transpose_all {
            get {
                return ResourceManager.GetString("setting label transpose all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose per track.
        /// </summary>
        internal static string setting_label_transpose_by_track {
            get {
                return ResourceManager.GetString("setting label transpose by track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapt high/low pitch notes when they are out of range into 3 octaves we can play.
        /// </summary>
        internal static string setting_tooltip_auto_adapt_notes {
            get {
                return ResourceManager.GetString("setting tooltip auto adapt notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto open or close MidiBard window when entering/exiting performance mode.
        /// </summary>
        internal static string setting_tooltip_auto_open_MidiBardTooltip {
            get {
                return ResourceManager.GetString("setting tooltip auto open MidiBardTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try auto restart listening last used midi device.
        /// </summary>
        internal static string setting_tooltip_auto_restart_listening {
            get {
                return ResourceManager.GetString("setting tooltip auto restart listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto disable background frame limit when entering performance mode and re-enable it when quit performance.
        /// </summary>
        internal static string setting_tooltip_auto_set_background_frame_limit {
            get {
                return ResourceManager.GetString("setting tooltip auto set background frame limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose/switch instrument based on first enabled midi track name(BMP rules).
        /// </summary>
        internal static string setting_tooltip_auto_switch_transpose_instrument_bmp_trackname {
            get {
                return ResourceManager.GetString("setting tooltip auto switch transpose instrument bmp trackname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto transpose notes on demand. If you need this, 
        ///please add #transpose number# before file name. 
        ///E.g. #-12#demo.mid.
        /// </summary>
        internal static string setting_tooltip_auto_transpose_by_file_name {
            get {
                return ResourceManager.GetString("setting tooltip auto transpose by file name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto switch instrument on demand. If you need this, 
        ///please add #instrument name# before file name. 
        ///E.g. #harp#demo.mid.
        /// </summary>
        internal static string setting_tooltip_label_auto_switch_instrument_by_file_name {
            get {
                return ResourceManager.GetString("setting tooltip label auto switch instrument by file name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Midibard UI language.
        /// </summary>
        internal static string setting_tooltip_language {
            get {
                return ResourceManager.GetString("setting tooltip language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alternative note input method, May slightly reduce input latency but will affect guitar tone switching accuracy. 
        ///Only recommended while using Midi keyboard..
        /// </summary>
        internal static string setting_tooltip_low_latency_mode {
            get {
                return ResourceManager.GetString("setting tooltip low latency mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto start ensemble when entering in-game party ensemble mode.
        /// </summary>
        internal static string setting_tooltip_monitor_ensemble {
            get {
                return ResourceManager.GetString("setting tooltip monitor ensemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose external midi input device. Right click to reset..
        /// </summary>
        internal static string setting_tooltip_select_input_device {
            get {
                return ResourceManager.GetString("setting tooltip select input device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select current instrument 
        ///Right click to quit performance mode.
        /// </summary>
        internal static string setting_tooltip_select_instrument {
            get {
                return ResourceManager.GetString("setting tooltip select instrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the playing progress 
        ///Right click to restart current playback.
        /// </summary>
        internal static string setting_tooltip_set_progress {
            get {
                return ResourceManager.GetString("setting tooltip set progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the speed of events playing.
        /// </summary>
        internal static string setting_tooltip_set_speed {
            get {
                return ResourceManager.GetString("setting tooltip set speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay time before play next track..
        /// </summary>
        internal static string setting_tooltip_song_delay {
            get {
                return ResourceManager.GetString("setting tooltip song delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow midibard settings and midi file settings auto sync between all midibard instances on this pc.
        /// </summary>
        internal static string setting_tooltip_sync_clients {
            get {
                return ResourceManager.GetString("setting tooltip sync clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose how MidiBard will handle MIDI channels and ProgramChange events(current only affects guitar tone changing).
        /// </summary>
        internal static string setting_tooltip_tone_mode {
            get {
                return ResourceManager.GetString("setting tooltip tone mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose, measured by semitone. 
        ///Right click to reset..
        /// </summary>
        internal static string setting_tooltip_transpose_all {
            get {
                return ResourceManager.GetString("setting tooltip transpose all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose per track, right click to reset all tracks&apos; transpose offset back to zero..
        /// </summary>
        internal static string setting_tooltip_transpose_by_track {
            get {
                return ResourceManager.GetString("setting tooltip transpose by track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing:.
        /// </summary>
        internal static string text_current_playing {
            get {
                return ResourceManager.GetString("text current playing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensemble mode running.
        /// </summary>
        internal static string text_ensemble_mode_running {
            get {
                return ResourceManager.GetString("text ensemble mode running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Copy).
        /// </summary>
        internal static string text_file_copy {
            get {
                return ResourceManager.GetString("text file copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import in progress....
        /// </summary>
        internal static string text_Import_in_progress {
            get {
                return ResourceManager.GetString("text Import in progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening input device: .
        /// </summary>
        internal static string text_listening_midi_device {
            get {
                return ResourceManager.GetString("text listening midi device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Midibard playlist.
        /// </summary>
        internal static string text_midibard_playlist {
            get {
                return ResourceManager.GetString("text midibard playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New playlist.
        /// </summary>
        internal static string text_new_playlist {
            get {
                return ResourceManager.GetString("text new playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import midi files to start performing!.
        /// </summary>
        internal static string text_playlist_is_empty {
            get {
                return ResourceManager.GetString("text playlist is empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playmode: .
        /// </summary>
        internal static string text_select_playmode {
            get {
                return ResourceManager.GetString("text select playmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start event listening on .
        /// </summary>
        internal static string text_start_event_listening {
            get {
                return ResourceManager.GetString("text start event listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} tracks in current playlist..
        /// </summary>
        internal static string text_tracks_in_playlist {
            get {
                return ResourceManager.GetString("text tracks in playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off.
        /// </summary>
        internal static string tone_mode_off {
            get {
                return ResourceManager.GetString("tone mode off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off: Does not take over game&apos;s guitar tone control..
        /// </summary>
        internal static string tone_mode_off_tooltip {
            get {
                return ResourceManager.GetString("tone mode off tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override.
        /// </summary>
        internal static string tone_mode_override {
            get {
                return ResourceManager.GetString("tone mode override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override by track: Assign guitar tone manually for each track and ignore ProgramChange events..
        /// </summary>
        internal static string tone_mode_override_tooltip {
            get {
                return ResourceManager.GetString("tone mode override tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple.
        /// </summary>
        internal static string tone_mode_simple {
            get {
                return ResourceManager.GetString("tone mode simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple: Simple ProgramChange handling, ProgramChange event on any channel will change all channels&apos; program state. (This is BardMusicPlayer&apos;s default behavior.).
        /// </summary>
        internal static string tone_mode_simple_tooltip {
            get {
                return ResourceManager.GetString("tone mode simple tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard.
        /// </summary>
        internal static string tone_mode_standard {
            get {
                return ResourceManager.GetString("tone mode standard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard: Standard midi channel and ProgramChange handling, each channel will keep it&apos;s program state separately..
        /// </summary>
        internal static string tone_mode_standard_tooltip {
            get {
                return ResourceManager.GetString("tone mode standard tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 file dialog.
        /// </summary>
        internal static string w32_file_dialog {
            get {
                return ResourceManager.GetString("w32 file dialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose new playlist save location.
        /// </summary>
        internal static string window_title_choose_new_playlist_save_location {
            get {
                return ResourceManager.GetString("window title choose new playlist save location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MidiBard local ensemble control.
        /// </summary>
        internal static string window_title_ensemble_panel {
            get {
                return ResourceManager.GetString("window title ensemble panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MidiBard Playlist.
        /// </summary>
        internal static string window_title_standalone_playlist {
            get {
                return ResourceManager.GetString("window title standalone playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MidiBard track visualizer.
        /// </summary>
        internal static string window_title_visualizor {
            get {
                return ResourceManager.GetString("window title visualizor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Track selection
        ///MidiBard will only perform enabled tracks
        ///Left click to enable/disable a track, Right click to solo it.
        /// </summary>
        internal static string window_tooltip_track_selection {
            get {
                return ResourceManager.GetString("window tooltip track selection", resourceCulture);
            }
        }
    }
}
